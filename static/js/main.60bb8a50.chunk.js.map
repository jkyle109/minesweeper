{"version":3,"sources":["realComponents/Block.js","realComponents/BoardRow.js","realComponents/Board.js","realComponents/Clock.js","realComponents/GUI.js","realComponents/BoardShell.js","realComponents/Game.js","App.js","index.js"],"names":["Block","props","state","color","block","visibility","value","cover","handleBoardClick","bind","revealSurrounding","colorChange","newColor","prevProps","prevState","snapshot","this","id","endGame","bombCount","blocksLeft","hasWon","setState","y","x","ny","nx","boardSize","boardData","revealBlock","event","preventDefault","hasLost","button","timerHandler","className","type","onClick","onContextMenu","style","backgroundColor","React","Component","BoardRow","blockRow","rowData","map","key","lineHeight","Board","board","row","display","showBoard","Clock","time","newTick","interval","setInterval","clearInterval","timeEnd","stopTimer","timeStart","Math","floor","Date","getTime","date","getHours","getMinutes","getSeconds","GUI","genBoard","size","difficulty","minePercentage","Array","random","surrounding","parseInt","toString","blank","Game","hasTriggered","revealBombs","handleInput","handleSubmit","gameWon","changeCount","oldState","name","target","window","location","reload","onSubmit","onChange","handleRestart","position","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60bb8a50.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Block extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      color: this.props.block.visibility ? this.props.block.value : \"grey\",\r\n      cover: \"\"\r\n    };\r\n    this.handleBoardClick = this.handleBoardClick.bind(this);\r\n    this.revealSurrounding = this.revealSurrounding.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n    this.newColor = this.newColor.bind(this);\r\n  };\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    // Handle Visual Updates\r\n    if(this.props.block.value === \"0\" && this.props.block.visibility === true){\r\n      this.revealSurrounding(this.props.block.id);\r\n    }\r\n    if(this.state.color !== this.newColor() && this.props.block.visibility === true){\r\n      this.colorChange(this.newColor());\r\n    }\r\n\r\n    //End Game\r\n    if(this.props.block.value === \"ðŸ’£\"  && this.props.block.visibility === true){\r\n      this.props.endGame(false);\r\n    }\r\n\r\n    if((this.props.bombCount === this.props.blocksLeft) && (!this.props.hasWon)){\r\n      this.props.endGame(true);\r\n      if(this.props.block.value === \"ðŸ’£\" && this.state.cover !== \"ðŸš©\"){\r\n        this.setState({cover: \"ðŸš©\"});\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  colorChange(color){\r\n    this.setState({\r\n      color: color\r\n    });\r\n  };\r\n\r\n\r\n  newColor() {\r\n    let color;\r\n    switch(this.props.block.value){\r\n      case \"0\":\r\n        color = \"#6495ED\";\r\n        break;\r\n      case \"1\":\r\n      case \"2\":\r\n        color = \"green\";\r\n        break;\r\n      case \"3\":\r\n      case \"4\":\r\n        color = \"orange\";\r\n        break;\r\n      case \"ðŸ’£\":\r\n        color = \"red\";\r\n        break;\r\n      default:\r\n        color = \"orangered\";\r\n    }\r\n    return color;\r\n  };\r\n\r\n\r\n  revealSurrounding(id){\r\n    const y = id[0];\r\n    const x = id[1];\r\n    let block;\r\n    const surrounding = [\r\n      [y-1, x-1],[y-1,x],[y-1,x+1],\r\n      [y,x-1],[y,x+1],\r\n      [y+1,x-1],[y+1,x],[y+1,x+1]\r\n    ];\r\n    for(block of surrounding)\r\n    {\r\n      const ny = block[0];\r\n      const nx = block[1];\r\n\r\n      if( !((ny >= this.props.boardSize) || (nx >= this.props.boardSize) || (ny < 0) || (nx < 0))) {\r\n        if(this.props.boardData[ny][nx].visibility === false){\r\n          this.props.revealBlock(block);\r\n          this.newColor();\r\n        }\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n  handleBoardClick(event) {\r\n    event.preventDefault();\r\n    if(!(this.props.hasWon || this.props.hasLost)) {\r\n      if (event.button === 0 && !(this.state.cover === \"ðŸš©\")) {\r\n        this.props.revealBlock(this.props.block.id);\r\n        this.props.timerHandler();\r\n      } else if (event.button === 2) {\r\n        if (this.props.block.visibility === false) {\r\n          if (this.state.cover === \"\") {\r\n            this.setState({cover: \"ðŸš©\"});\r\n          } else {\r\n            this.setState({cover: \"\"});\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n        <button\r\n          className={\"block\"} type={\"button\"}\r\n          onClick={(event) => this.handleBoardClick(event)}\r\n          onContextMenu={(event) => this.handleBoardClick(event)}\r\n          style={{backgroundColor: this.state.color}}>\r\n          {this.props.block.visibility ? this.props.block.value : this.state.cover}\r\n        </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Block","import React from \"react\";\r\nimport Block from \"./Block\";\r\n// row\r\nclass BoardRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    const blockRow = this.props.rowData.map(block => (\r\n      <Block\r\n        key={block.id}\r\n        block={block}\r\n        style={{lineHeight: \"20px\"}}\r\n        {...this.props}\r\n      />\r\n    ));\r\n\r\n    return(\r\n      <div className={\"boardRow\"}>\r\n        {blockRow}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoardRow","import React from \"react\"\r\nimport BoardRow from \"./BoardRow\"\r\n\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const board = this.props.boardData.map(row => (\r\n      <BoardRow\r\n        key={row[0].id[0]}\r\n        rowData={row}\r\n        revealBlock={this.revealBlock}\r\n        {...this.state}\r\n        {...this.props}\r\n      />\r\n    ));\r\n    return (\r\n      <div className={\"board\"} style={{display: this.props.showBoard ? \"block\" : \"none\"}}>\r\n        {board}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board","import React from \"react\"\r\n\r\n\r\n\r\nclass Clock extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      time: 0,\r\n    };\r\n    this.newTick=this.newTick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.newTick(),1000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if((this.props.hasLost || this.props.hasWon)){\r\n      clearInterval(this.interval);\r\n      if(this.props.timeEnd === null) {\r\n        this.props.stopTimer(this.state.time)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    clearInterval((this.interval));\r\n  }\r\n\r\n  newTick(){\r\n    this.setState(() => {\r\n      if(!(this.props.timeStart === 0)){\r\n        return {\r\n          time: (Math.floor((new Date().getTime() - this.props.timeStart) / 1000)+1)\r\n        };\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  getTime(date){\r\n    let h = date.getHours();\r\n    let m = date.getMinutes();\r\n    let s = date.getSeconds();\r\n\r\n    return h+':'+m+':'+s;\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <h4 className=\"clock\">\r\n        Time: {this.state.time}\r\n      </h4>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Clock;","import React from \"react\"\r\nimport Clock from \"./Clock\"\r\n\r\nclass GUI extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clock\">\r\n        <Clock\r\n          {...this.props}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GUI","function genBoard(size, difficulty){\r\n  let bombCount = 0;\r\n\r\n  let minePercentage;\r\n  switch(difficulty){\r\n    case(1):\r\n    default:\r\n      minePercentage = 0.1;\r\n      break;\r\n    case(2):\r\n      minePercentage = 0.15;\r\n      break;\r\n    case(3):\r\n      minePercentage = 0.2;\r\n      break;\r\n    case(4):\r\n      minePercentage = 0.3;\r\n  }\r\n\r\n  let board;\r\n\r\n  do {\r\n    let value;\r\n    board = [...Array(size)].map(() => Array(size));\r\n    for (let y = 0; y < size; y++) {\r\n      for (let x = 0; x < size; x++) {\r\n        if (Math.random() < minePercentage) {\r\n          value = \"ðŸ’£\";\r\n          bombCount++;\r\n        } else {\r\n          value = \"0\";\r\n        }\r\n        board[y][x] = {id: [y, x], value: value, visibility: false};\r\n      }\r\n    }\r\n  } while(bombCount === 0);\r\n\r\n\r\n  for(let row of board){\r\n    for(let block of row){\r\n      const y = block.id[0];\r\n      const x = block.id[1];\r\n      const surrounding = [\r\n        [y-1, x-1],[y-1,x],[y-1,x+1],\r\n        [y,x-1],[y,x+1],\r\n        [y+1,x-1],[y+1,x],[y+1,x+1]\r\n      ];\r\n      if(block.value === \"ðŸ’£\"){\r\n        for(let id of surrounding){\r\n          const ny = id[0];\r\n          const nx = id[1];\r\n          if( !((ny >= size) || (nx >= size) || (ny < 0) || (nx < 0))) {\r\n            if(board[ny][nx].value !== \"ðŸ’£\") {\r\n              board[ny][nx].value = (parseInt(board[ny][nx].value) + 1).toString()\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return {board: board, bombCount: bombCount};\r\n}\r\n\r\nexport default genBoard;","import React from \"react\"\r\nimport Board from \"./Board\"\r\nimport GUI from \"./GUI\"\r\n\r\nimport genBoard from \"./BoardShell\"\r\n\r\n\r\nconst blank = genBoard(3,1).board;\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeStart: 0,\r\n      timeEnd: null,\r\n      hasTriggered: false, //Timer\r\n      hasLost: false,\r\n      hasWon: false,\r\n      revealBombs: false,\r\n      showBoard: false,\r\n\r\n      boardData: blank,\r\n      boardSize: 3,\r\n      difficulty: 1,\r\n      bombCount: 1,\r\n      blocksLeft: 3 * 3,\r\n    };\r\n    this.timerHandler = this.timerHandler.bind(this);\r\n    this.endGame = this.endGame.bind(this);\r\n    this.revealBlock = this.revealBlock.bind(this);\r\n    this.revealBombs = this.revealBombs.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.stopTimer = this.stopTimer.bind(this);\r\n  }\r\n\r\n\r\n  timerHandler() {\r\n    if (!this.state.hasTriggered) {\r\n      this.setState({timeStart: new Date().getTime(), hasTriggered: true})\r\n    }\r\n  };\r\n\r\n  stopTimer(time) {\r\n    if(this.state.hasWon) {\r\n      //console.log(`Username: ${this.state.username}, Difficulty: ${this.state.difficulty}, Size: ${this.state.boardSize}, Time: ${time}`)\r\n    }\r\n  }\r\n\r\n  endGame(gameWon) {\r\n    if (gameWon && !this.state.hasWon) {\r\n      this.setState({hasWon: true});\r\n    }\r\n    if (!gameWon && !this.state.hasLost) {\r\n      this.revealBombs();\r\n      this.setState({hasLost: true});\r\n    }\r\n  };\r\n  \r\n  revealBlock(id){\r\n    let changeCount = 0;\r\n    if(!this.state.boardData[id[0]][id[1]].visibility) {\r\n      this.setState((oldState) => {\r\n        const newBoard = oldState.boardData.map(row => {\r\n          if (row[0].id[0] === id[0]) {\r\n            return row.map(block => {\r\n              if (block.id[0] === id[0] && block.id[1] === id[1]) {\r\n                if(block.visibility === false){\r\n                  block.visibility = true;\r\n                  changeCount++;\r\n                }\r\n              }\r\n              return block\r\n            })\r\n          }\r\n          return row\r\n        });\r\n        return ({\r\n          boardData: newBoard,\r\n          blocksLeft: (oldState.blocksLeft-changeCount),\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  revealBombs(){\r\n    this.setState(oldState => {\r\n      const newBoard = oldState.boardData.map(row => {\r\n        return row.map(block => {\r\n          if(block.value === \"ðŸ’£\"){\r\n            block.visibility = true;\r\n          }\r\n          return block\r\n        })\r\n      });\r\n      return({\r\n        boardData: newBoard\r\n      })\r\n    });\r\n  }\r\n\r\n  handleInput(event){\r\n    const name = event.target.name;\r\n    let value = event.target.value;\r\n    if(name !== \"username\"){\r\n      value = parseInt(value);\r\n    }\r\n    //console.log(event.target.name,event.target.value);\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  };\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    const boardData = genBoard(this.state.boardSize, this.state.difficulty);\r\n    this.setState({\r\n      boardData: boardData.board,\r\n      bombCount: boardData.bombCount,\r\n      blocksLeft: this.state.boardSize*this.state.boardSize,\r\n      showBoard: true,\r\n    })\r\n  }\r\n\r\n  handleRestart(){\r\n    window.location.reload();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div style={{display: this.state.showBoard ? \"block\" : \"none\"}}>\r\n          <GUI\r\n            stopTimer={this.stopTimer}\r\n            {...this.state}\r\n          />\r\n        </div>\r\n        \r\n\r\n        <form className=\"menu\" onSubmit={this.handleSubmit} style={{display: this.state.showBoard ? \"none\" : \"block\"}}>\r\n          <label>Difficulty:</label>\r\n          <br/>\r\n          <select className=\"custom-select\" name={\"difficulty\"} onChange={this.handleInput}>\r\n            <option value={1}>Easy</option>\r\n            <option value={2}>Medium</option>\r\n            <option value={3}>Hard</option>\r\n            <option value={4}>Insane</option>\r\n          </select>\r\n          <br/>\r\n          <br/>\r\n          <label>Board Size:</label>\r\n          <br/>\r\n          <select className=\"custom-select\" name={\"boardSize\"} onChange={this.handleInput}>\r\n            <option value={3}>3x3</option>\r\n            <option value={5}>5x5</option>\r\n            <option value={10}>10x10</option>\r\n          </select>\r\n          <br/>\r\n          <input className=\"button\" type={\"submit\"} value={\"Start!\"}/>\r\n        </form>\r\n\r\n\r\n        <Board\r\n          timerHandler={this.timerHandler}\r\n          endGame={this.endGame}\r\n          revealBlock={this.revealBlock}\r\n          revealBombs={this.revealBombs}\r\n          {...this.state}\r\n        />\r\n        \r\n        <button\r\n          className=\"button\"\r\n          type=\"button\"\r\n          onClick={() => this.handleRestart()}\r\n          style={{display: this.state.hasLost || this.state.hasWon ? \"block\" : \"none\", position: \"fixed\", }}\r\n        >Restart</button>\r\n\r\n        <h1 className=\"comment\" style={{display: this.state.hasLost || this.state.hasWon ? \"block\" : \"none\", position: \"fixed\", }}\r\n        >YOU {this.state.hasWon ? \"WON\" : \"LOST\"}</h1>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game","import React from \"react\"\r\nimport Game from \"./realComponents/Game\";\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Game />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\n\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}